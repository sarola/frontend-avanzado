{"version":3,"sources":["webpack:///./src/app/views/offers/offers-detail/offers-detail.component-wrapper.ts","webpack:///./src/app/views/offers/offers-detail/offers-detail.component.html","webpack:///./src/app/views/offers/offers-detail/offers-detail.component.scss","webpack:///./src/app/views/offers/offers-detail/offers-detail.component.ts","webpack:///./src/app/views/offers/offers-list/offers-list.component.html","webpack:///./src/app/views/offers/offers-list/offers-list.component.ts","webpack:///./src/app/views/offers/offers-profile/offers-profile.component.html","webpack:///./src/app/views/offers/offers-profile/offers-profile.component.ts","webpack:///./src/app/views/offers/offers-routing.module.ts","webpack:///./src/app/views/offers/offers.component.html","webpack:///./src/app/views/offers/offers.component.scss","webpack:///./src/app/views/offers/offers.component.ts","webpack:///./src/app/views/offers/offers.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAA0C;AAEO;AAGb;AAEoB;AACR;AACY;AACM;AAYlE;IAGE,sCAAoB,MAAuB,EAAU,KAAqB;QAA1E,iBAMC;QANmB,WAAM,GAAN,MAAM,CAAiB;QAAU,UAAK,GAAL,KAAK,CAAgB;QACxE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,qEAAU,CAAC,CAAC;QAC5C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAClC,0DAAG,CAAC,UAAC,EAAsB;gBAApB,UAAE;YAAuB,aAAM,CAAC,QAAQ,CAAC,EAAE,CAAC;QAAnB,CAAmB,CAAC,EACpD,gEAAS,CAAC,YAAE,IAAI,YAAI,CAAC,MAAM,CAAC,MAAM,CAAC,iFAAY,CAAC,EAAE,CAAC,CAAC,EAApC,CAAoC,CAAC,CACtD,CAAC;IACJ,CAAC;IAED,uDAAgB,GAAhB,UAAiB,IAAU;QACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,6EAAsB,CAAC,IAAI,CAAC,CAAC,CAAC;IACzD,CAAC;IACD,yDAAkB,GAAlB,UAAmB,IAAU;QAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,6EAAsB,CAAC,IAAI,CAAC,CAAC,CAAC;IACzD,CAAC;IAhBU,4BAA4B;QAXxC,+DAAS,CAAC;YACT,QAAQ,EAAE,2BAA2B;YACrC,QAAQ,EAAE,yOAOT;SACF,CAAC;+EAI4B,iDAAK,EAA2B,8DAAc;OAH/D,4BAA4B,CAiBxC;IAAD,mCAAC;CAAA;AAjBwC;;;;;;;;;;;;ACtBzC,4BAA4B,iDAAiD,8KAA8K,oBAAoB,iIAAiI,gBAAgB,oIAAoI,qBAAqB,oIAAoI,qBAAqB,gIAAgI,iCAAiC,oIAAoI,qBAAqB,wMAAwM,YAAY,2YAA2Y,oBAAoB,yHAAyH,yBAAyB,2DAA2D,yBAAyB,6DAA6D,iDAAiD,iFAAiF,gCAAgC,gFAAgF,WAAW,4FAA4F,4BAA4B,gBAAgB,2R;;;;;;;;;;;ACAvyE,+DAA+D,mL;;;;;;;;;;;;;;;;;ACAgB;AAY/E;IAME;QAHU,mBAAc,GAAuB,IAAI,0DAAY,EAAQ,CAAC;QAC9D,qBAAgB,GAAuB,IAAI,0DAAY,EAAQ,CAAC;IAE3D,CAAC;IAEhB,yCAAS,GAAT;QACE,IAAM,MAAM,GAAO,IAAI,CAAC,IAAI,CAAC,MAAM,SAAE,IAAI,CAAC,KAAK,EAAC,CAAC;QACjD,IAAM,IAAI,GAAG,mDACR,IAAI,CAAC,IAAI,IACZ,MAAM,WACP,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IACD,2CAAW,GAAX;QAAA,iBASC;QARC,IAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CACpC,gBAAM,IAAI,aAAM,CAAC,EAAE,KAAK,KAAI,CAAC,KAAK,CAAC,EAAE,EAA3B,CAA2B,CACtC,CAAC;QACF,IAAM,IAAI,GAAG,mDACR,IAAI,CAAC,IAAI,IACZ,MAAM,WACP,CAAC;QACF,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IACD,2CAAW,GAAX;QAAA,iBAIC;QAHC,OAAO,CAAC,CAAC,CACP,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAM,IAAI,YAAI,CAAC,KAAK,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE,EAA3B,CAA2B,CAAC,CAC1E,CAAC;IACJ,CAAC;IA7BQ;QAAR,2DAAK,EAAE;;wDAAc;IACb;QAAR,2DAAK,EAAE;;uDAAY;IACV;QAAT,4DAAM,EAAE;wEAAiB,0DAAY;iEAAkC;IAC9D;QAAT,4DAAM,EAAE;wEAAmB,0DAAY;mEAAkC;IAJ/D,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,wIAA6C;;SAE9C,CAAC;;OACW,qBAAqB,CA+BjC;IAAD,4BAAC;CAAA;AA/BiC;;;;;;;;;;;;ACZlC,oVAAoV,kBAAkB,2LAA2L,uBAAuB,4LAA4L,wBAAwB,sLAAsL,mCAAmC,8LAA8L,uBAAuB,8LAA8L,uBAAuB,8LAA8L,iCAAiC,uaAAua,2BAA2B,2TAA2T,kBAAkB,2LAA2L,uBAAuB,4LAA4L,wBAAwB,sLAAsL,mCAAmC,8LAA8L,uBAAuB,8LAA8L,uBAAuB,8IAA8I,iCAAiC,2gBAA2gB,kBAAkB,0BAA0B,sBAAsB,0BAA0B,uBAAuB,0BAA0B,cAAc,0BAA0B,uBAAuB,0BAA0B,uBAAuB,0BAA0B,iCAAiC,+oBAA+oB,kBAAkB,0BAA0B,sBAAsB,0BAA0B,uBAAuB,0BAA0B,cAAc,0BAA0B,uBAAuB,0BAA0B,uBAAuB,yF;;;;;;;;;;;;;;;;;ACM7wK;AAUvB;IAQE;QALA,gBAAW,GAAY,EAAE,CAAC;QAC1B,gBAAW,GAAY,EAAE,CAAC;QAC1B,qBAAgB,GAAG,CAAC,KAAK,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,CAAC,CAAC;QAC1G,2BAAsB,GAAG,CAAC,KAAK,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;IAEzE,CAAC;IAChB,yCAAW,GAAX,UAAY,OAAsB;QAChC,IAAI,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,MAAM,EAAE;YAClC,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;IACH,CAAC;IAEO,0CAAY,GAApB;QACE,IAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;QACxC,IAAM,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QACtC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM;aAC3B,MAAM,CAAC,eAAK;YACX,oBAAa,CAAC,IAAI,CAAC,eAAK,IAAI,YAAK,CAAC,GAAG,KAAK,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAhC,CAAgC,CAAC;QAA7D,CAA6D,CAC9D;aACA,GAAG,CAAC,eAAK;YACR,IAAM,SAAS,GAAG,CAAC,CAAC,YAAY,CAAC,IAAI,CACnC,oBAAU,IAAI,iBAAU,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,EAA1B,CAA0B,CACzC,CAAC;YACF,OAAO,mDAAK,KAAK,IAAE,SAAS,EAAE,SAAS,IAAG;QAC5C,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,eAAK;YACzC,oBAAa,CAAC,KAAK,CAAC,eAAK,IAAI,YAAK,CAAC,GAAG,KAAK,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAhC,CAAgC,CAAC;QAA9D,CAA8D,CAC/D,CAAC;IACJ,CAAC;IA9BQ;QAAR,2DAAK,EAAE;;qDAAY;IACX;QAAR,2DAAK,EAAE;;uDAAiB;IAFd,mBAAmB;QAJ/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,kIAA2C;SAC5C,CAAC;;OACW,mBAAmB,CAgC/B;IAAD,0BAAC;CAAA;AAhC+B;;;;;;;;;;;;AChBhC,ySAAyS,kBAAkB,2LAA2L,uBAAuB,4LAA4L,wBAAwB,sLAAsL,mCAAmC,8LAA8L,uBAAuB,8LAA8L,uBAAuB,ybAAyb,2BAA2B,mC;;;;;;;;;;;;;;;;;ACApvD;AAUpE;IAKE;QAHA,WAAM,GAAY,EAAE,CAAC;QACrB,qBAAgB,GAAG,CAAC,KAAK,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;IAE9E,CAAC;IAChB,4CAAW,GAAX;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;IACjC,CAAC;IAPQ;QAAR,2DAAK,EAAE;;wDAAY;IADT,sBAAsB;QAJlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,2IAA8C;SAC/C,CAAC;;OACW,sBAAsB,CASlC;IAAD,6BAAC;CAAA;AATkC;;;;;;;;;;;;;;;;;;;;;ACVM;AACc;AACF;AAC0C;AAE/F,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,iEAAe;KAC3B;IACD;QACE,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iEAAe;QAC1B,IAAI,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE;KAC1B;IACD;QACE,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,2GAA4B;KACxC;CACF,CAAC;AAMF;IAAA;IAAkC,CAAC;IAAtB,mBAAmB;QAJ/B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,mBAAmB,CAAG;IAAD,0BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBhC,sP;;;;;;;;;;;ACAA,+DAA+D,uJ;;;;;;;;;;;;;;;;;;;;;ACAb;AAIO;AACrB;AAIoB;AACC;AAOzD;IAIE,yBAAoB,KAAqB,EAAU,MAAuB;QAA1E,iBAMC;QANmB,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAiB;QAD1E,iBAAY,GAAG,IAAI,CAAC;QAElB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CACvB,gBAAM,IAAI,QAAC,KAAI,CAAC,YAAY,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,EAAvC,CAAuC,CAClD,CAAC;QACF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,qEAAU,CAAC,CAAC;QAC5C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,sEAAS,CAAC,CAAC;IAC/C,CAAC;IAED,kCAAQ,GAAR,cAAY,CAAC;IAZF,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,4GAAsC;;SAEvC,CAAC;+EAK2B,8DAAc,EAAkB,iDAAK;OAJrD,eAAe,CAa3B;IAAD,sBAAC;CAAA;AAb2B;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBa;AACM;AAEe;AACT;AAC2B;AACN;AACS;AACY;AACnC;AAa5D;IAAA;IAA2B,CAAC;IAAf,YAAY;QAXxB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,iEAAe;gBACf,+FAAsB;gBACtB,sFAAmB;gBACnB,4FAAqB;gBACrB,2GAA4B;aAC7B;YACD,OAAO,EAAE,CAAC,4DAAY,EAAE,0EAAmB,EAAE,sEAAc,CAAC;YAC5D,OAAO,EAAE,CAAC,sEAAc,CAAC;SAC1B,CAAC;OACW,YAAY,CAAG;IAAD,mBAAC;CAAA;AAAH","file":"views-offers-offers-module.js","sourcesContent":["import { Component } from '@angular/core';\nimport { Offer } from 'src/app/shared/models/offer.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from 'src/app/shared/models/user.model';\nimport { AppStore } from 'src/app/shared/states/store.interface';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { getProfile } from 'src/app/shared/states/user';\nimport { map, switchMap } from 'rxjs/operators';\nimport { getOfferByID } from 'src/app/shared/states/offers';\nimport * as UserActions from 'src/app/shared/states/user/actions';\n@Component({\n  selector: 'app-offers-detail-wrapper',\n  template: `\n    <app-offers-detail\n      [user]=\"user$ | async\"\n      [offer]=\"offer$ | async\"\n      (subscribeOffer)=\"onSubscribeOffer($event)\"\n      (unsubscribeOffer)=\"onUnsubscribeOffer($event)\"\n    ></app-offers-detail>\n  `\n})\nexport class OffersDetailWrapperComponent {\n  offer$: Observable<Offer>;\n  user$: Observable<User>;\n  constructor(private store$: Store<AppStore>, private route: ActivatedRoute) {\n    this.user$ = this.store$.select(getProfile);\n    this.offer$ = this.route.params.pipe(\n      map(({ id }: { id: string }) => Number.parseInt(id)),\n      switchMap(id => this.store$.select(getOfferByID(id)))\n    );\n  }\n\n  onSubscribeOffer(user: User) {\n    this.store$.dispatch(new UserActions.UpdateUser(user));\n  }\n  onUnsubscribeOffer(user: User) {\n    this.store$.dispatch(new UserActions.UpdateUser(user));\n  }\n}\n","module.exports = \"<h3>\\n  {{offer.job.name + \\\" en \\\" + offer.province.name}}\\n</h3>\\n\\n<div fxLayout=\\\"column\\\" class=\\\"pl15\\\">\\n  <mat-list>\\n    <mat-list-item> <p matLine class=\\\"titulo-detalle\\\" >Empresa: </p><p matLine class=\\\"texto-detalle\\\">{{offer.company.name}}</p> </mat-list-item>\\n    <mat-list-item> <p matLine class=\\\"titulo-detalle\\\" >Puesto:</p> <p matLine class=\\\"texto-detalle\\\">{{offer.job.name}}</p> </mat-list-item>\\n    <mat-list-item> <p matLine class=\\\"titulo-detalle\\\" >Provincia:</p> <p matLine class=\\\"texto-detalle\\\">{{offer.province.name}}</p> </mat-list-item>\\n    <mat-list-item> <p matLine class=\\\"titulo-detalle\\\" >Municipio:</p> <p matLine class=\\\"texto-detalle\\\">{{offer.municipe.name}} </p></mat-list-item>\\n    <mat-list-item> <p matLine class=\\\"titulo-detalle\\\" >Fecha: </p><p matLine class=\\\"texto-detalle\\\">{{offer.date | date: 'dd-MM-yyyy'}} </p></mat-list-item>\\n    <mat-list-item> <p matLine class=\\\"titulo-detalle\\\" >Categoría:</p> <p matLine class=\\\"texto-detalle\\\">{{offer.category.name}} </p></mat-list-item>\\n    <mat-list-item> <p matLine class=\\\"titulo-detalle wrap\\\" >Títulos:</p>\\n      <!--<ul>-->\\n        <p matLine class=\\\"texto-detalle\\\" *ngFor=\\\"let title of offer.title\\\"> {{title.name}} </p>\\n      <!--</ul>-->\\n    </mat-list-item>\\n  </mat-list>\\n  <div fxFlex fxLayoutAlign=\\\"center\\\" class=\\\"mb-3em mt-3em\\\">\\n  <button mat-raised-button color=\\\"primary\\\" *ngIf=\\\"!isSubscribe()\\\" (click)=\\\"subscribe()\\\">Inscribirme</button>\\n  <button  mat-raised-button color=\\\"warn\\\" *ngIf=\\\"isSubscribe()\\\" (click)=\\\"unsubscribe()\\\">Eliminar oferta</button>\\n  </div>\\n\\n</div>\\n\\n\\n<!--},-->\\n<!--\\\"job\\\": {-->\\n<!--\\\"name\\\": \\\"Programador Jr Java\\\",-->\\n<!--\\\"description\\\": \\\"Programación y prueba unitaria en Java\\\"-->\\n<!--},-->\\n<!--\\\"province\\\": {-->\\n<!--\\\"uid\\\": 1,-->\\n<!--\\\"name\\\": \\\"Málaga\\\"-->\\n<!--},-->\\n<!--\\\"municipe\\\": {-->\\n<!--\\\"uid\\\": 7,-->\\n<!--\\\"name\\\": \\\"Estepona\\\"-->\\n<!--},-->\\n<!--\\\"date\\\": null,-->\\n<!--\\\"category\\\": {-->\\n<!--\\\"uid\\\": 2,-->\\n<!--\\\"name\\\": \\\"Informática y Comunicaciones\\\"-->\\n<!--},-->\\n<!--\\\"title\\\": [-->\\n<!--{-->\\n<!--\\\"uid\\\": 1,-->\\n<!--\\\"name\\\": \\\"Desarrollo Aplicaciones Web\\\"-->\\n<!--},-->\\n<!--{-->\\n<!--\\\"uid\\\": 4,-->\\n<!--\\\"name\\\": \\\"Desarrollo Aplicaciones Multiplataforma\\\"-->\\n<!--}-->\\n<!--]-->\\n\\n<!--<pre>{{ offer | json }} </pre>-->\\n\\n<!--<button *ngIf=\\\"!isSubscribe()\\\" class=\\\"btn btn-primary\\\" (click)=\\\"subscribe()\\\">-->\\n  <!--Inscribirse-->\\n<!--</button>-->\\n<!--<button *ngIf=\\\"isSubscribe()\\\" class=\\\"btn btn-danger\\\" (click)=\\\"unsubscribe()\\\">-->\\n  <!--Eliminar oferta-->\\n<!--</button>-->\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL29mZmVycy9vZmZlcnMtZGV0YWlsL29mZmVycy1kZXRhaWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { OffersService } from 'src/app/shared/services/offers.service';\nimport { Offer } from 'src/app/shared/models/offer.model';\nimport { ProfileService } from 'src/app/shared/services/profile.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from 'src/app/shared/models/user.model';\n\n@Component({\n  selector: 'app-offers-detail',\n  templateUrl: './offers-detail.component.html',\n  styleUrls: ['./offers-detail.component.scss']\n})\nexport class OffersDetailComponent {\n  @Input() offer: Offer;\n  @Input() user: User;\n  @Output() subscribeOffer: EventEmitter<User> = new EventEmitter<User>();\n  @Output() unsubscribeOffer: EventEmitter<User> = new EventEmitter<User>();\n\n  constructor() {}\n\n  subscribe() {\n    const offers = [...this.user.offers, this.offer];\n    const user = {\n      ...this.user,\n      offers\n    };\n    this.subscribeOffer.emit(user);\n  }\n  unsubscribe() {\n    const offers = this.user.offers.filter(\n      _offer => _offer.id !== this.offer.id\n    );\n    const user = {\n      ...this.user,\n      offers\n    };\n    this.unsubscribeOffer.emit(user);\n  }\n  isSubscribe(): boolean {\n    return !!(\n      this.user && this.user.offers.find(_offer => this.offer.id === _offer.id)\n    );\n  }\n}\n","module.exports = \"<h2>Ofertas</h2>\\n\\n<div class=\\\"mb-3em table\\\">\\n  <h3>Cumple con la Titulación (Familia)</h3>\\n  <table mat-table [dataSource]=\\\"offers\\\" class=\\\"mat-elevation-z8\\\">\\n\\n    <ng-container matColumnDef=\\\"job\\\">\\n      <th mat-header-cell *matHeaderCellDef> Puesto  </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.job.name}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"company\\\">\\n      <th mat-header-cell *matHeaderCellDef> Empresa  </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.company.name }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"category\\\">\\n      <th mat-header-cell *matHeaderCellDef> Familia  </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.category.name }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"date\\\">\\n      <th mat-header-cell *matHeaderCellDef> Fecha  </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.date | date: 'dd-MM-yyyy'}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"province\\\">\\n      <th mat-header-cell *matHeaderCellDef> Provincia  </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.province.name}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"municipe\\\">\\n      <th mat-header-cell *matHeaderCellDef> Municipio  </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.municipe.name}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"subscribe\\\">\\n      <th mat-header-cell *matHeaderCellDef> Inscrito  </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.subscribe ? 'Si' : 'No'}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <th mat-header-cell *matHeaderCellDef> Acciones  </th>\\n      <td mat-cell *matCellDef=\\\"let offer\\\">\\n        <a mat-raised-button class=\\\"btn-acciones\\\" [routerLink]=\\\"[offer.id]\\\">Ver detalle</a>\\n      </td>\\n\\n    </ng-container>\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n</div>\\n\\n<div class=\\\"table\\\">\\n  <h3>Otras Ofertas</h3>\\n\\n  <table mat-table [dataSource]=\\\"offersOther\\\" class=\\\"mat-elevation-z8\\\">\\n\\n    <ng-container matColumnDef=\\\"job\\\">\\n      <th mat-header-cell *matHeaderCellDef> Puesto  </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.job.name}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"company\\\">\\n      <th mat-header-cell *matHeaderCellDef> Empresa  </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.company.name }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"category\\\">\\n      <th mat-header-cell *matHeaderCellDef> Familia  </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.category.name }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"date\\\">\\n      <th mat-header-cell *matHeaderCellDef> Fecha  </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.date | date: 'dd-MM-yyyy'}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"province\\\">\\n      <th mat-header-cell *matHeaderCellDef> Provincia  </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.province.name}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"municipe\\\">\\n      <th mat-header-cell *matHeaderCellDef> Municipio  </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.municipe.name}} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumnsOthers\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumnsOthers;\\\"></tr>\\n  </table>\\n</div>\\n<!--<table class=\\\"table table-bordered table-striped\\\">-->\\n  <!--<thead class=\\\"thead-light\\\">-->\\n    <!--<tr>-->\\n      <!--<th>Puesto</th>-->\\n      <!--<th>Empresa</th>-->\\n      <!--<th>Familia</th>-->\\n      <!--<th>Fecha</th>-->\\n      <!--<th>Provincia</th>-->\\n      <!--<th>Municipio</th>-->\\n      <!--<th>Inscrito</th>-->\\n      <!--<th>Acciones</th>-->\\n    <!--</tr>-->\\n  <!--</thead>-->\\n  <!--<tbody>-->\\n    <!--<tr *ngFor=\\\"let offer of offersStudy\\\">-->\\n      <!--<td>{{ offer.job.name }}</td>-->\\n      <!--<td>{{ offer.company.name }}</td>-->\\n      <!--<td>{{ offer.category.name }}</td>-->\\n      <!--<td>{{ offer.date }}</td>-->\\n      <!--<td>{{ offer.province.name }}</td>-->\\n      <!--<td>{{ offer.municipe.name }}</td>-->\\n      <!--<td>{{ offer.subscribe ? 'Sí' : 'No' }}</td>-->\\n      <!--<td>-->\\n        <!--<a style=\\\"cursor:pointer\\\" [routerLink]=\\\"[offer.id]\\\">Ver Detalle</a>-->\\n      <!--</td>-->\\n    <!--</tr>-->\\n  <!--</tbody>-->\\n<!--</table>-->\\n\\n<!--<h3>Otras Ofertas</h3>-->\\n\\n<!--<table class=\\\"table table-bordered table-striped\\\">-->\\n  <!--<thead class=\\\"thead-light\\\">-->\\n    <!--<tr>-->\\n      <!--<th>Puesto</th>-->\\n      <!--<th>Empresa</th>-->\\n      <!--<th>Familia</th>-->\\n      <!--<th>Fecha</th>-->\\n      <!--<th>Provincia</th>-->\\n      <!--<th>Municipio</th>-->\\n    <!--</tr>-->\\n  <!--</thead>-->\\n  <!--<tbody>-->\\n    <!--<tr *ngFor=\\\"let offer of offersOther\\\">-->\\n      <!--<td>{{ offer.job.name }}</td>-->\\n      <!--<td>{{ offer.company.name }}</td>-->\\n      <!--<td>{{ offer.category.name }}</td>-->\\n      <!--<td>{{ offer.date }}</td>-->\\n      <!--<td>{{ offer.province.name }}</td>-->\\n      <!--<td>{{ offer.municipe.name }}</td>-->\\n      <!--<td></td>-->\\n    <!--</tr>-->\\n  <!--</tbody>-->\\n<!--</table>-->\\n\"","import {\n  Component,\n  OnInit,\n  Input,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport { OffersService } from 'src/app/shared/services/offers.service';\nimport { Offer } from 'src/app/shared/models/offer.model';\nimport { ProfileService } from 'src/app/shared/services/profile.service';\nimport { User } from 'src/app/shared/models/user.model';\n\n@Component({\n  selector: 'app-offers-list',\n  templateUrl: './offers-list.component.html'\n})\nexport class OffersListComponent implements OnChanges {\n  @Input() user: User;\n  @Input() offers: Offer[];\n  offersStudy: Offer[] = [];\n  offersOther: Offer[] = [];\n  displayedColumns = ['job', 'company', 'category', 'date', 'province', 'municipe', 'subscribe', 'actions'];\n  displayedColumnsOthers = ['job', 'company', 'category', 'date', 'province', 'municipe'];\n\n  constructor() {}\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.user && changes.offers) {\n      this.selectOffers();\n    }\n  }\n\n  private selectOffers() {\n    const studiesOfUser = this.user.studies;\n    const offersOfUser = this.user.offers;\n    this.offersStudy = this.offers\n      .filter(offer =>\n        studiesOfUser.some(study => study.uid === offer.category.uid)\n      )\n      .map(offer => {\n        const offerUser = !!offersOfUser.find(\n          _offerUser => _offerUser.id === offer.id\n        );\n        return { ...offer, subscribe: offerUser };\n      });\n    this.offersOther = this.offers.filter(offer =>\n      studiesOfUser.every(study => study.uid !== offer.category.uid)\n    );\n  }\n}\n","module.exports = \"<h3>Mis Ofertas</h3>\\n\\n<div class=\\\"table mb-3em\\\">\\n  <table mat-table [dataSource]=\\\"offers\\\" class=\\\"mat-elevation-z8\\\">\\n\\n    <ng-container matColumnDef=\\\"job\\\">\\n      <th mat-header-cell *matHeaderCellDef> Puesto  </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.job.name}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"company\\\">\\n      <th mat-header-cell *matHeaderCellDef> Empresa  </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.company.name }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"category\\\">\\n      <th mat-header-cell *matHeaderCellDef> Familia  </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.category.name }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"date\\\">\\n      <th mat-header-cell *matHeaderCellDef> Fecha  </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.date | date: 'dd-MM-yyyy'}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"province\\\">\\n      <th mat-header-cell *matHeaderCellDef> Provincia  </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.province.name}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"municipe\\\">\\n      <th mat-header-cell *matHeaderCellDef> Municipio  </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.municipe.name}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <th mat-header-cell *matHeaderCellDef> Acciones  </th>\\n      <td mat-cell *matCellDef=\\\"let offer\\\">\\n        <a mat-raised-button class=\\\"btn-acciones\\\" [routerLink]=\\\"['/admin/offers/', offer.id]\\\">Ver detalle</a>\\n      </td>\\n\\n    </ng-container>\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n</div>\\n\\n\"","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { OffersService } from 'src/app/shared/services/offers.service';\nimport { Offer } from 'src/app/shared/models/offer.model';\nimport { ProfileService } from 'src/app/shared/services/profile.service';\nimport { User } from 'src/app/shared/models/user.model';\n\n@Component({\n  selector: 'app-offers-profile',\n  templateUrl: './offers-profile.component.html'\n})\nexport class OffersProfileComponent implements OnChanges {\n  @Input() user: User;\n  offers: Offer[] = [];\n  displayedColumns = ['job', 'company', 'category', 'date', 'province', 'municipe', 'actions'];\n\n  constructor() {}\n  ngOnChanges() {\n    this.offers = this.user.offers;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OffersComponent } from './offers.component';\nimport { OffersDetailWrapperComponent } from './offers-detail/offers-detail.component-wrapper';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OffersComponent\n  },\n  {\n    path: 'my-offers',\n    component: OffersComponent,\n    data: { my_offers: true }\n  },\n  {\n    path: ':id',\n    component: OffersDetailWrapperComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OffersRoutingModule {}\n","module.exports = \"\\n<app-offers-list\\n  [user]=\\\"user$ | async\\\"\\n  [offers]=\\\"offers$ | async\\\"\\n  *ngIf=\\\"isOffersList\\\"\\n></app-offers-list>\\n<app-offers-profile\\n  [user]=\\\"user$ | async\\\"\\n  *ngIf=\\\"!isOffersList\\\"\\n></app-offers-profile>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL29mZmVycy9vZmZlcnMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { OffersService } from 'src/app/shared/services/offers.service';\nimport { Offer } from 'src/app/shared/models/offer.model';\nimport { ProfileService } from 'src/app/shared/services/profile.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AppStore } from 'src/app/shared/states/store.interface';\nimport { Observable, of } from 'rxjs';\nimport { User } from 'src/app/shared/models/user.model';\nimport { getProfile } from 'src/app/shared/states/user';\nimport { getOffers } from 'src/app/shared/states/offers';\n\n@Component({\n  selector: 'app-offers',\n  templateUrl: './offers.component.html',\n  styleUrls: ['./offers.component.scss']\n})\nexport class OffersComponent implements OnInit {\n  user$: Observable<User>;\n  offers$: Observable<Offer[]>;\n  isOffersList = true;\n  constructor(private route: ActivatedRoute, private store$: Store<AppStore>) {\n    this.route.data.subscribe(\n      params => (this.isOffersList = !params.my_offers)\n    );\n    this.user$ = this.store$.select(getProfile);\n    this.offers$ = this.store$.select(getOffers);\n  }\n\n  ngOnInit() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OffersRoutingModule } from './offers-routing.module';\nimport { OffersComponent } from './offers.component';\nimport { OffersDetailComponent } from './offers-detail/offers-detail.component';\nimport { OffersListComponent } from './offers-list/offers-list.component';\nimport { OffersProfileComponent } from './offers-profile/offers-profile.component';\nimport { OffersDetailWrapperComponent } from './offers-detail/offers-detail.component-wrapper';\nimport {MaterialModule} from '../../shared/material.module';\n\n@NgModule({\n  declarations: [\n    OffersComponent,\n    OffersProfileComponent,\n    OffersListComponent,\n    OffersDetailComponent,\n    OffersDetailWrapperComponent\n  ],\n  imports: [CommonModule, OffersRoutingModule, MaterialModule],\n  exports: [MaterialModule]\n})\nexport class OffersModule {}\n"],"sourceRoot":""}