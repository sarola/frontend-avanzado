{"version":3,"sources":["webpack:///./src/app/shared/directives/date-validator.directive.ts","webpack:///./src/app/shared/directives/document-number-validator.directive.ts","webpack:///./src/app/shared/mock-data.ts","webpack:///./src/app/shared/models/study.model.ts","webpack:///./src/app/views/profile/profile-routing.module.ts","webpack:///./src/app/views/profile/profile-student/account/profile-account.component-wrapper.ts","webpack:///./src/app/views/profile/profile-student/account/profile-account.component.html","webpack:///./src/app/views/profile/profile-student/account/profile-account.component.scss","webpack:///./src/app/views/profile/profile-student/account/profile-account.component.ts","webpack:///./src/app/views/profile/profile-student/language/profile-language.component-wrapper.ts","webpack:///./src/app/views/profile/profile-student/language/profile-language.component.html","webpack:///./src/app/views/profile/profile-student/language/profile-language.component.scss","webpack:///./src/app/views/profile/profile-student/language/profile-language.component.ts","webpack:///./src/app/views/profile/profile-student/profile-student.component.html","webpack:///./src/app/views/profile/profile-student/profile-student.component.scss","webpack:///./src/app/views/profile/profile-student/profile-student.component.ts","webpack:///./src/app/views/profile/profile-student/study/profile-study.component-wrapper.ts","webpack:///./src/app/views/profile/profile-student/study/profile-study.component.html","webpack:///./src/app/views/profile/profile-student/study/profile-study.component.scss","webpack:///./src/app/views/profile/profile-student/study/profile-study.component.ts","webpack:///./src/app/views/profile/profile-student/study/university-degree-form/university-degree-form.component.html","webpack:///./src/app/views/profile/profile-student/study/university-degree-form/university-degree-form.component.ts","webpack:///./src/app/views/profile/profile-student/study/vocational-form/vocational-form.component.html","webpack:///./src/app/views/profile/profile-student/study/vocational-form/vocational-form.component.ts","webpack:///./src/app/views/profile/profile.component.html","webpack:///./src/app/views/profile/profile.component.scss","webpack:///./src/app/views/profile/profile.component.ts","webpack:///./src/app/views/profile/profile.module.ts"],"names":[],"mappings":"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","file":"views-profile-profile-module.js","sourcesContent":["import { ValidatorFn, AbstractControl } from '@angular/forms';\nimport * as moment from 'moment';\nexport function dateValidator(): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n\n    let forbidden = true;\n    const valueControl = new Date(control.value);\n    const DateMin = new Date(1900, 1, 1);\n    const DateMax = new Date(Date.now() );\n    if (valueControl > DateMin && valueControl < DateMax) {\n        forbidden = false;\n    }\n\n    console.log(control.value);\n    console.log('validation: ' + (control.value > DateMin) + \"|\" + (control.value < DateMax));\n\n   // const forbidden = !moment(control.value, 'MM/DD/YYYY', true).isValid();\n    // const forbidden2 = !moment(control.value, 'M/D/YYYY', true).isValid();\n    // const forbidden3 = !moment(control.value, 'M/DD/YYYY', true).isValid();\n    // const forbidden4 = !moment(control.value, 'MM/D/YYYY', true).isValid();\n    console.log('forbiddendate: ' + forbidden  + ':' + control.value);\n    return forbidden ? { forbiddenDate: { value: control.value } } : null;\n  };\n}\n","import { ValidatorFn, FormGroup } from '@angular/forms';\nimport { AppSettings } from '../app.settings';\nimport { MockData } from '../mock-data';\n\nconst COMMAND = {\n  [MockData.DOCUMENTS_TYPE[0].uid]: isValidNIF,\n  [MockData.DOCUMENTS_TYPE[1].uid]: isValidPassport,\n  [MockData.DOCUMENTS_TYPE[2].uid]: isValidOther,\n  execute: function(documentType, params) {\n\n    const type = documentType.uid;\n    return !this[type](params);\n  }\n};\nfunction isValidNIF(nif: string): boolean {\n  let isValid = false;\n  let fixedNIF = nif.toUpperCase();\n\n  let correctDigit = '';\n  let writtenDigit = '';\n\n  if (!/^[A-Z]+$/i.test(fixedNIF.substr(1, 1))) {\n    fixedNIF = '000000000' + nif;\n    fixedNIF = fixedNIF.substr(-9);\n  }\n\n  writtenDigit = nif.substr(-1, 1);\n\n  if (isValidNIFFormat(fixedNIF)) {\n    correctDigit = getNIFCheckDigit(fixedNIF);\n\n    if (writtenDigit == correctDigit) {\n      isValid = true;\n    }\n  }\n  return isValid;\n}\nfunction isValidNIFFormat(docNumber) {\n  return respectsDocPattern(\n    docNumber,\n    /^[KLM0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][A-Z0-9]/\n  );\n}\nfunction respectsDocPattern(givenString, pattern) {\n  let isValid = false;\n\n  let fixedString = givenString.toUpperCase();\n  const firstChar = parseInt(fixedString.substr(0, 1), 10);\n\n  if (firstChar % 1 === 0) {\n    fixedString = '000000000' + fixedString;\n    fixedString = fixedString.substr(-9);\n  }\n\n  if (pattern.test(fixedString)) {\n    isValid = true;\n  }\n\n  return isValid;\n}\nfunction getNIFCheckDigit(docNumber) {\n  const keyString = 'TRWAGMYFPDXBNJZSQVHLCKE';\n\n  let fixedDocNumber = docNumber.toUpperCase();\n\n  let position = 0;\n  let writtenLetter = '';\n  let correctLetter = '';\n\n  if (!/^[A-Z]+$/i.test(fixedDocNumber.substr(1, 1))) {\n    fixedDocNumber = '000000000' + fixedDocNumber;\n    fixedDocNumber = fixedDocNumber.substr(-9);\n  } else {\n    fixedDocNumber = docNumber.toUpperCase();\n  }\n\n  if (isValidNIFFormat(fixedDocNumber)) {\n    writtenLetter = fixedDocNumber.substr(-1);\n\n    fixedDocNumber = fixedDocNumber.replace('K', '0');\n    fixedDocNumber = fixedDocNumber.replace('L', '0');\n    fixedDocNumber = fixedDocNumber.replace('M', '0');\n\n    position = fixedDocNumber.substr(0, 8) % 23;\n    correctLetter = keyString.substr(position, 1);\n  }\n\n  return correctLetter;\n}\n\nfunction isValidPassport(passport: string): boolean {\n  //TODO: This code is not develop yet.\n  return true;\n}\nfunction isValidOther(other: string): boolean {\n  return true;\n}\nexport function documentNumberValidator(): ValidatorFn {\n  return (form: FormGroup): { [key: string]: any } | null => {\n    const documentType = form.controls['documentType'].value;\n    const documentNumber = form.controls['documentNumber'].value;\n    const forbidden = COMMAND.execute(documentType, documentNumber);\n\n    return forbidden\n      ? { documentNumberForbbiden: { value: documentNumber } }\n      : null;\n  };\n}\n","import { Institution } from './models/study.model';\n\nexport class MockData {\n  public static readonly VOCATIONAL_INSTITUTION: Institution[] = [\n    { uid: 1, name: 'IES Belén' },\n    { uid: 2, name: 'IES Politécnico Jesús Marín' },\n    { uid: 3, name: 'IES Rosaleda' }\n  ];\n  public static readonly VOCATIONAL_CATEGORY = [\n    { uid: 1, name: 'Artes Gráficas' },\n    { uid: 2, name: 'Informática y comunicaciones' },\n    { uid: 3, name: 'Imagen y sonido' },\n    { uid: 4, name: 'Comercio y Marketing' },\n    { uid: 5, name: 'Administración y Gestión' }\n  ];\n  public static readonly VOCATIONAL_TITLE = [\n    { uid: 1, name: 'Desarrollo de Aplicaciones Web' },\n    { uid: 2, name: 'Administración de Sistemas Informáticos y Redes ' },\n    { uid: 3, name: 'VideoDJ' },\n    { uid: 4, name: 'Desarrollo Aplicaciones Multiplataforma' },\n    { uid: 5, name: 'Gestión Comercial y Empresarial' },\n    { uid: 6, name: 'Empresariales' }\n  ];\n  public static readonly VOCATIONAL_GRADES = [\n    { uid: 1, name: 'FP Básica' },\n    { uid: 2, name: 'Ciclo Formativo de Grado Medio' },\n    { uid: 3, name: 'Ciclo Formativo de Grado Superior' }\n  ];\n  public static readonly TYPE_STUDIES = [\n    { uid: 1, name: 'Ciclo formativo' },\n    { uid: 2, name: 'Título Universitario' },\n    { uid: 3, name: 'Otro título' }\n  ];\n  public static readonly LANGUAGES_LEVEL = [\n    { uid: 1, name: 'A1' },\n    { uid: 2, name: 'A2' },\n    { uid: 3, name: 'B1' },\n    { uid: 4, name: 'B2' },\n    { uid: 5, name: 'C1' },\n    { uid: 6, name: 'C2' }\n  ];\n  public static readonly LANGUAGES_NAME = [\n    { uid: 1, name: 'Inglés' },\n    { uid: 2, name: 'Francés' },\n    { uid: 3, name: 'Alemán' },\n    { uid: 4, name: 'Espaol' }\n  ];\n  public static readonly DOCUMENTS_TYPE = [\n    { uid: 1, name: 'NIF' },\n    { uid: 2, name: 'Pasaporte' },\n    { uid: 3, name: 'Otro' }\n  ];\n  public static readonly MUNICIPES = [\n    { uid: 1, name: 'Málaga' },\n    { uid: 2, name: 'Fuengirola' },\n    { uid: 3, name: 'Rincón de la victoria' },\n    { uid: 4, name: 'Dos hermanas' },\n    { uid: 5, name: 'Sevilla' },\n    { uid: 6, name: 'Chiclana de la Frontera' },\n    { uid: 7, name: 'Estepona' },\n    { uid: 8, name: 'Campanillas (PTA)' },\n    { uid: 9, name: 'Motril' },\n    { uid: 10, name: 'Osuna' }\n  ];\n  public static readonly PROVINCES = [\n    { uid: 1, name: 'Málaga' },\n    { uid: 2, name: 'Sevilla' },\n    { uid: 3, name: 'Huelva' },\n    { uid: 4, name: 'Cádiz' },\n    { uid: 5, name: 'Granada' }\n  ];\n\n  public static fakeIncreaseID<T>(collection, object: T): T {\n    const _object = { ...object };\n    const uid = collection[collection.length - 1].uid + 1;\n    _object['uid'] = uid;\n    return _object;\n  }\n}\n","export class Study {\n  uid: number;\n  level: LevelStudy;\n  title: TitleStudy;\n  certificate: boolean; //Sera un fichero\n  date: Date;\n  bilingue: boolean;\n}\n\nexport class CollegeStudy extends Study {\n  name: string;\n  institution: String;\n}\n\nexport class VocationalStudy extends Study {\n  category: Category;\n  grade: Grade;\n  dual: boolean;\n\n  institution: Institution;\n}\n\nexport class Institution {\n  uid: number;\n  name: string;\n}\nexport class Category {\n  uid: number;\n  name: string;\n}\nexport class Grade {\n  uid: number;\n  name: string;\n}\nexport class TitleStudy {\n  uid: number;\n  name: string;\n}\nexport class LevelStudy {\n  uid: number;\n  name: string;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProfileComponent } from './profile.component';\nimport { ProfileAccountWrapperComponent } from './profile-student/account/profile-account.component-wrapper';\nimport { ProfileLanguageWrapperComponent } from './profile-student/language/profile-language.component-wrapper';\nimport { ProfileStudyWrapperComponent } from './profile-student/study/profile-study.component-wrapper';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfileComponent\n  },\n  {\n    path: 'profile-student/account',\n    component: ProfileAccountWrapperComponent\n  },\n  {\n    path: 'profile-student/study',\n    component: ProfileStudyWrapperComponent\n  },\n  {\n    path: 'profile-student/study/:uid',\n    component: ProfileStudyWrapperComponent\n  },\n  {\n    path: 'profile-student/language',\n    component: ProfileLanguageWrapperComponent\n  },\n  {\n    path: 'profile-student/language/:uid',\n    component: ProfileLanguageWrapperComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProfileRoutingModule {}\n","import { Component } from '@angular/core';\r\nimport { User } from 'src/app/shared/models/user.model';\r\nimport { AppStore } from 'src/app/shared/states/store.interface';\r\nimport { Store } from '@ngrx/store';\r\nimport { getProfile } from 'src/app/shared/states/user';\r\nimport { Observable } from 'rxjs';\r\nimport * as UsersActions from 'src/app/shared/states/user/actions';\r\n\r\n@Component({\r\n  selector: 'app-profile-account-wrapper',\r\n  template: `\r\n    <app-profile-account\r\n              [user]=\"user$ | async\"\r\n              (onSave)=\"save($event)\">\r\n    </app-profile-account>`,\r\n})\r\nexport class ProfileAccountWrapperComponent {\r\n  user$: Observable<User>;\r\n\r\n  constructor(private store$: Store<AppStore>) {\r\n      this.user$ = this.store$.select(getProfile);\r\n  }\r\n  save(user: User) {\r\n    this.store$.dispatch(new UsersActions.UpdateUser(user));\r\n  }\r\n}\r\n","module.exports = \"<form fxFlex fxLayout=\\\"column\\\" [formGroup]=\\\"rForm\\\" (submit)=\\\"save()\\\">\\r\\n  <h2>Modificar perfil</h2>\\r\\n\\r\\n  <mat-form-field hintLabel=\\\"Min 3 caracteres / Max 55\\\" class=\\\"input\\\">\\r\\n    <input matInput placeholder=\\\"Nombre\\\" id=\\\"name\\\"\\r\\n           formControlName=\\\"name\\\"\\r\\n           class=\\\"form-control\\\" required\\r\\n           [ngClass]=\\\"{\\r\\n              'is-invalid': submitted && rForm.controls.name.errors\\r\\n            }\\\">\\r\\n    <mat-error *ngIf=\\\"rForm.controls.name.errors\\\">Hay un error en el formato del nombre</mat-error>\\r\\n\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field hintLabel=\\\"Min 3 caracteres / Max 55\\\" class=\\\"input\\\">\\r\\n    <input matInput placeholder=\\\"Apellidos\\\" id=\\\"surname\\\"\\r\\n           formControlName=\\\"surname\\\"\\r\\n           class=\\\"form-control\\\" required\\r\\n           [ngClass]=\\\"{\\r\\n              'is-invalid': submitted && rForm.controls.surname.errors\\r\\n            }\\\">\\r\\n    <mat-error *ngIf=\\\"rForm.controls.surname.errors\\\">Hay un error en el formato del apellido</mat-error>\\r\\n\\r\\n  </mat-form-field>\\r\\n  <mat-form-field>\\r\\n    <input required matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Fecha de nacimiento\\\" formControlName=\\\"birthdate\\\">\\r\\n    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n    <mat-datepicker #picker></mat-datepicker>\\r\\n    <mat-error *ngIf=\\\"rForm.controls.birthdate.errors\\\">Debes indicar una fecha de nacimiento válida</mat-error>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field class=\\\"input\\\">\\r\\n    <input matInput placeholder=\\\"Teléfono\\\" id=\\\"phone\\\"\\r\\n           formControlName=\\\"phone\\\"\\r\\n           class=\\\"form-control\\\" required\\r\\n           [ngClass]=\\\"{\\r\\n              'is-invalid': submitted && rForm.controls.phone.errors\\r\\n            }\\\">\\r\\n    <mat-error *ngIf=\\\"rForm.controls.phone.errors\\\">Hay un error en el formato del teléfono</mat-error>\\r\\n\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field class=\\\"input\\\">\\r\\n    <input matInput placeholder=\\\"Teléfono 2\\\" id=\\\"phone2\\\"\\r\\n           formControlName=\\\"phone2\\\"\\r\\n           class=\\\"form-control\\\"\\r\\n           [ngClass]=\\\"{\\r\\n              'is-invalid': submitted && rForm.controls.phone2.errors\\r\\n            }\\\">\\r\\n    <mat-error *ngIf=\\\"rForm.controls.phone2.errors\\\">Hay un error en el formato del teléfono</mat-error>\\r\\n\\r\\n  </mat-form-field>\\r\\n  <mat-form-field>\\r\\n    <mat-label>Tipo de documento</mat-label>\\r\\n    <mat-select [compareWith]=\\\"compareByUID\\\" required formControlName=\\\"documentType\\\" id=\\\"documentType\\\" name=\\\"documentType\\\">\\r\\n      <mat-option *ngFor=\\\"let documentType of documentsType\\\" [value]=\\\"documentType\\\">\\r\\n        {{documentType.name}}\\r\\n      </mat-option>\\r\\n    </mat-select>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field class=\\\"input\\\">\\r\\n    <input matInput placeholder=\\\"Número de documento\\\" id=\\\"documentNumber\\\"\\r\\n           formControlName=\\\"documentNumber\\\" name=\\\"documentNumber\\\"\\r\\n           class=\\\"form-control\\\" required\\r\\n           [ngClass]=\\\"{\\r\\n              'is-invalid': submitted && rForm.controls.documentNumber.errors\\r\\n            }\\\">\\r\\n    <mat-error *ngIf=\\\"rForm.controls.documentNumber.errors\\\">Hay un error en el formato del número del documento</mat-error>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <mat-label>Provincia</mat-label>\\r\\n    <mat-select [compareWith]=\\\"compareByUID\\\" required formControlName=\\\"province\\\" id=\\\"province\\\" name=\\\"province\\\">\\r\\n      <mat-option *ngFor=\\\"let province of provinces\\\" [value]=\\\"province\\\">\\r\\n        {{province.name}}\\r\\n      </mat-option>\\r\\n    </mat-select>\\r\\n    <mat-error *ngIf=\\\"rForm.controls.province.errors\\\">La provincia es obligatoria</mat-error>\\r\\n\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <mat-label>Municipio</mat-label>\\r\\n    <mat-select [compareWith]=\\\"compareByUID\\\" required formControlName=\\\"municipe\\\" id=\\\"municipe\\\" name=\\\"municipe\\\">\\r\\n      <mat-option>--</mat-option>\\r\\n\\r\\n      <mat-option *ngFor=\\\"let municipe of municipes\\\" [value]=\\\"municipe\\\">\\r\\n        {{municipe.name}}\\r\\n      </mat-option>\\r\\n    </mat-select>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field class=\\\"textarea\\\">\\r\\n    <textarea matInput placeholder=\\\"Acerca de mi\\\" id=\\\"aboutMe\\\"\\r\\n           formControlName=\\\"aboutMe\\\" name=\\\"aboutMe\\\"\\r\\n           class=\\\"form-control\\\"\\r\\n          >\\r\\n    </textarea>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field class=\\\"textarea\\\">\\r\\n    <textarea matInput placeholder=\\\"Otras competencias\\\" id=\\\"otherCompetences\\\"\\r\\n              formControlName=\\\"otherCompetences\\\" name=\\\"otherCompetences\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n    >\\r\\n    </textarea>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field class=\\\"input\\\">\\r\\n    <input matInput placeholder=\\\"Licencias\\\" id=\\\"licences\\\"\\r\\n              formControlName=\\\"license\\\" name=\\\"licences\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n    >\\r\\n  </mat-form-field>\\r\\n\\r\\n  <div fxFlex fxLayout=\\\"row\\\" fxFlexAlign=\\\"center\\\">\\r\\n   <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"rForm.invalid\\\">\\r\\n\\r\\n  Guardar\\r\\n  </button>\\r\\n  </div>\\r\\n\\r\\n</form>\\r\\n\"","module.exports = \"form input.ng-invalid.ng-touched {\\n  border-color: #FA787E; }\\n\\n.mat-input-element {\\n  border-color: aqua; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvcHJvZmlsZS9wcm9maWxlLXN0dWRlbnQvYWNjb3VudC9DOlxcVXNlcnNcXFNhcmFcXERvY3VtZW50c1xcTUFTVEVSXFwyIHNlbWVzdHJlXFxGcm9udC1lbmQgYXZhbnphZG9cXFBFQzNcXFVPQ0pvYi9zcmNcXGFwcFxcdmlld3NcXHByb2ZpbGVcXHByb2ZpbGUtc3R1ZGVudFxcYWNjb3VudFxccHJvZmlsZS1hY2NvdW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UscUJBQXFCLEVBQUE7O0FBRXZCO0VBQ0Usa0JBQWtCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC92aWV3cy9wcm9maWxlL3Byb2ZpbGUtc3R1ZGVudC9hY2NvdW50L3Byb2ZpbGUtYWNjb3VudC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImZvcm0gaW5wdXQubmctaW52YWxpZC5uZy10b3VjaGVkIHtcclxuICBib3JkZXItY29sb3I6ICNGQTc4N0U7XHJcbn1cclxuLm1hdC1pbnB1dC1lbGVtZW50e1xyXG4gIGJvcmRlci1jb2xvcjogYXF1YTtcclxufVxyXG4iXX0= */\"","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ProfileService } from '../../../../shared/services/profile.service';\r\nimport { MockData } from 'src/app/shared/mock-data';\r\nimport { dateValidator } from 'src/app/shared/directives/date-validator.directive';\r\nimport {\r\n  User,\r\n  DocumentType,\r\n  Municipe,\r\n  Province\r\n} from 'src/app/shared/models/user.model';\r\nimport { documentNumberValidator } from 'src/app/shared/directives/document-number-validator.directive';\r\nimport { AppStore } from 'src/app/shared/states/store.interface';\r\nimport { Store } from '@ngrx/store';\r\nimport { getProfile } from 'src/app/shared/states/user';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-profile-account',\r\n  templateUrl: './profile-account.component.html',\r\n  styleUrls: ['./profile-account.component.scss']\r\n})\r\nexport class ProfileAccountComponent implements OnInit, OnChanges {\r\n  @Input() user: User;\r\n  // tslint:disable-next-line:no-output-on-prefix\r\n  @Output() onSave: EventEmitter<User> = new EventEmitter<User>();\r\n  rForm: FormGroup;\r\n  documentsType: DocumentType[];\r\n  municipes: Municipe[];\r\n  provinces: Province[];\r\n\r\n  constructor() {}\r\n  ngOnInit() {\r\n    this.loadSelectProperties();\r\n    this.loadFormInstance();\r\n  }\r\n  ngOnChanges() {\r\n    this.loadFormInstance();\r\n  }\r\n  public loadSelectProperties(): void {\r\n    this.documentsType = MockData.DOCUMENTS_TYPE;\r\n    this.municipes = MockData.MUNICIPES;\r\n    this.provinces = MockData.PROVINCES;\r\n  }\r\n\r\n  public loadFormInstance(): void {\r\n    this.rForm = new FormGroup(\r\n      {\r\n        name: new FormControl(this.user.name, [\r\n          Validators.required,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(55),\r\n          Validators.pattern(/^[a-zA-Z]+$/)\r\n        ]),\r\n        surname: new FormControl(this.user.surname, [\r\n          Validators.required,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(55),\r\n          Validators.pattern(/^[a-zA-Z]+$/)\r\n        ]),\r\n        phone: new FormControl(this.user.phone, [\r\n          Validators.pattern(/^[0-9]{6,}$/),\r\n          Validators.required\r\n        ]),\r\n        phone2: new FormControl(this.user.phone2, [\r\n          Validators.pattern(/^[0-9]{6,}$/)\r\n        ]),\r\n\r\n        birthdate: new FormControl(this.user.birthdate, [\r\n          Validators.required,\r\n          dateValidator()\r\n        ]),\r\n        documentType: new FormControl(this.user.documentType, [\r\n          Validators.required\r\n        ]),\r\n        documentNumber: new FormControl(this.user.documentNumber, [\r\n          Validators.required\r\n        ]),\r\n        street: new FormControl(this.user.address.street, [\r\n          Validators.required\r\n        ]),\r\n        municipe: new FormControl(this.user.address.municipe, [\r\n          Validators.required\r\n        ]),\r\n        province: new FormControl(this.user.address.province, [\r\n          Validators.required\r\n        ]),\r\n        aboutMe: new FormControl(this.user.aboutMe),\r\n        otherCompetences: new FormControl(this.user.aboutMe),\r\n        license: new FormControl(this.user.license)\r\n      },\r\n      documentNumberValidator()\r\n    );\r\n  }\r\n\r\n  public save() {\r\n    const { street = '', municipe = '', province = '', ...rest } = {\r\n      ...this.rForm.value\r\n    };\r\n    const address = {\r\n      street,\r\n      municipe,\r\n      province\r\n    };\r\n    const user = { ...this.user, address, ...rest };\r\n    this.onSave.emit(user);\r\n  }\r\n  compareByUID(option1, option2) {\r\n    return option1.uid === (option2 && option2.uid);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Language } from 'src/app/shared/models/language.model';\r\nimport { Observable } from 'rxjs';\r\nimport { AppStore } from 'src/app/shared/states/store.interface';\r\nimport { Store } from '@ngrx/store';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport { getLanguageByID, getProfile } from 'src/app/shared/states/user';\r\nimport * as UserActions from 'src/app/shared/states/user/actions';\r\nimport { User } from 'src/app/shared/models/user.model';\r\n\r\n@Component({\r\n  selector: 'app-profile-language-wrapper',\r\n  template: `\r\n    <app-profile-language fxLayout=\"column\"\r\n      [language]=\"language$ | async\"\r\n      [user]=\"user$ | async\"\r\n      (save)=\"onSaveLanguage($event)\"\r\n      (update)=\"onUpdateLanguage($event)\"\r\n    ></app-profile-language>\r\n  `\r\n})\r\nexport class ProfileLanguageWrapperComponent {\r\n  language$: Observable<Language>;\r\n  user$: Observable<User>;\r\n\r\n  constructor(private route: ActivatedRoute, private store$: Store<AppStore>) {\r\n    this.user$ = this.store$.select(getProfile);\r\n    this.language$ = this.route.params.pipe(\r\n      map(({ uid: uid }: { uid: string }) => Number.parseInt(uid)),\r\n      switchMap(uid => this.store$.select(getLanguageByID(uid)))\r\n    );\r\n  }\r\n\r\n  onSaveLanguage(user: User) {\r\n    this.store$.dispatch(new UserActions.UpdateUser(user));\r\n  }\r\n  onUpdateLanguage(user: User) {\r\n    this.store$.dispatch(new UserActions.UpdateUser(user));\r\n  }\r\n}\r\n","module.exports = \"\\r\\n<h2 *ngIf=\\\"isNew()\\\">Nuevo idioma</h2>\\r\\n<h2 *ngIf=\\\"!isNew()\\\">Modificar idioma</h2>\\r\\n\\r\\n<form fxFlex fxLayout=\\\"column\\\" [formGroup]=\\\"rForm\\\" (submit)=\\\"submit()\\\">\\r\\n\\r\\n\\r\\n  <mat-form-field>\\r\\n    <mat-label>Nivel</mat-label>\\r\\n    <mat-select [compareWith]=\\\"compareLevel\\\" required formControlName=\\\"level\\\" id=\\\"level\\\" name=\\\"level\\\">\\r\\n      <mat-option *ngFor=\\\"let level of languageLevels\\\" [value]=\\\"level\\\">\\r\\n        {{level.name}}\\r\\n      </mat-option>\\r\\n    </mat-select>\\r\\n    <mat-error *ngIf=\\\"rForm.controls.level.errors\\\">El nivel es obligatorio</mat-error>\\r\\n\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <mat-label>Idioma</mat-label>\\r\\n    <mat-select [compareWith]=\\\"compareName\\\" required formControlName=\\\"name\\\" id=\\\"name\\\" name=\\\"name\\\">\\r\\n      <mat-option *ngFor=\\\"let name of languageNames\\\" [value]=\\\"name\\\">\\r\\n        {{name.name}}\\r\\n      </mat-option>\\r\\n    </mat-select>\\r\\n    <mat-error *ngIf=\\\"rForm.controls.name.errors\\\">El idioma es obligatorio</mat-error>\\r\\n  </mat-form-field>\\r\\n\\r\\n    <mat-form-field>\\r\\n      <input required matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Fecha de obtención del título\\\" formControlName=\\\"date\\\">\\r\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n      <mat-datepicker #picker></mat-datepicker>\\r\\n      <mat-error *ngIf=\\\"rForm.controls.date.errors\\\">Debes indicar una fecha válida</mat-error>\\r\\n    </mat-form-field>\\r\\n\\r\\n  <div fxFlex fxLayout=\\\"row\\\" fxFlexAlign=\\\"center\\\">\\r\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"rForm.invalid\\\">\\r\\n\\r\\n      Guardar\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n  <!--<div class=\\\"form-group\\\">-->\\r\\n    <!--<label for=\\\"level\\\">Nivel</label>-->\\r\\n    <!--<select-->\\r\\n      <!--[compareWith]=\\\"compareLevel\\\"-->\\r\\n      <!--class=\\\"col-sm-10 form-control\\\"-->\\r\\n      <!--name=\\\"level\\\"-->\\r\\n      <!--formControlName=\\\"level\\\"-->\\r\\n    <!--&gt;-->\\r\\n      <!--<option [ngValue]=\\\"level\\\" *ngFor=\\\"let level of languageLevels\\\">-->\\r\\n        <!--{{ level.name }}</option-->\\r\\n      <!--&gt;-->\\r\\n    <!--</select>-->\\r\\n  <!--</div>-->\\r\\n\\r\\n  <!--<div class=\\\"form-group\\\">-->\\r\\n    <!--<label for=\\\"name\\\">Idioma</label>-->\\r\\n    <!--<select-->\\r\\n      <!--class=\\\"col-sm-10 form-control\\\"-->\\r\\n      <!--name=\\\"name\\\"-->\\r\\n      <!--formControlName=\\\"name\\\"-->\\r\\n      <!--[compareWith]=\\\"compareName\\\"-->\\r\\n    <!--&gt;-->\\r\\n      <!--<option [ngValue]=\\\"name\\\" *ngFor=\\\"let name of languageNames\\\">-->\\r\\n        <!--{{ name.name }}</option-->\\r\\n      <!--&gt;-->\\r\\n    <!--</select>-->\\r\\n  <!--</div>-->\\r\\n\\r\\n  <!--<div class=\\\"form-group\\\">-->\\r\\n    <!--<label for=\\\"date\\\">Fecha de obtención del título</label>-->\\r\\n    <!--<input-->\\r\\n      <!--type=\\\"text\\\"-->\\r\\n      <!--name=\\\"date\\\"-->\\r\\n      <!--class=\\\"col-sm-10 form-control\\\"-->\\r\\n      <!--formControlName=\\\"date\\\"-->\\r\\n    <!--/>-->\\r\\n  <!--</div>-->\\r\\n\\r\\n  <!--<button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"rForm.invalid\\\">-->\\r\\n    <!--Guardar-->\\r\\n  <!--</button>-->\\r\\n</form>\\r\\n\"","module.exports = \"form input.ng-invalid.ng-touched {\\n  border-color: #FA787E; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvcHJvZmlsZS9wcm9maWxlLXN0dWRlbnQvbGFuZ3VhZ2UvQzpcXFVzZXJzXFxTYXJhXFxEb2N1bWVudHNcXE1BU1RFUlxcMiBzZW1lc3RyZVxcRnJvbnQtZW5kIGF2YW56YWRvXFxQRUMzXFxVT0NKb2Ivc3JjXFxhcHBcXHZpZXdzXFxwcm9maWxlXFxwcm9maWxlLXN0dWRlbnRcXGxhbmd1YWdlXFxwcm9maWxlLWxhbmd1YWdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UscUJBQXFCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC92aWV3cy9wcm9maWxlL3Byb2ZpbGUtc3R1ZGVudC9sYW5ndWFnZS9wcm9maWxlLWxhbmd1YWdlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZm9ybSBpbnB1dC5uZy1pbnZhbGlkLm5nLXRvdWNoZWQge1xyXG4gIGJvcmRlci1jb2xvcjogI0ZBNzg3RTtcclxufVxyXG4iXX0= */\"","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  EventEmitter,\r\n  Output,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { MockData } from 'src/app/shared/mock-data';\r\nimport {\r\n  Language,\r\n  LanguageLevel,\r\n  LanguageName\r\n} from 'src/app/shared/models/language.model';\r\nimport { dateValidator } from 'src/app/shared/directives/date-validator.directive';\r\nimport { User } from 'src/app/shared/models/user.model';\r\n\r\n@Component({\r\n  selector: 'app-profile-language',\r\n  templateUrl: './profile-language.component.html',\r\n  styleUrls: ['./profile-language.component.scss']\r\n})\r\nexport class ProfileLanguageComponent implements OnInit, OnChanges {\r\n  @Input() language: Language = {} as Language;\r\n  @Input() user: User = {} as User;\r\n  @Output() save: EventEmitter<User> = new EventEmitter();\r\n  @Output() update: EventEmitter<User> = new EventEmitter();\r\n\r\n  rForm: FormGroup;\r\n  languageLevels: LanguageLevel[];\r\n  languageNames: LanguageName[];\r\n\r\n  constructor() {}\r\n  ngOnInit() {\r\n    this.loadSelectProperties();\r\n  }\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    let language = {} as Language;\r\n    if (this.hasChangeLanguage(changes.language)) {\r\n      language = changes.language.currentValue;\r\n    }\r\n    this.loadFormInstance(language);\r\n  }\r\n  private hasChangeLanguage(language) {\r\n    return language && language.currentValue;\r\n  }\r\n  public loadSelectProperties(): void {\r\n    this.languageLevels = MockData.LANGUAGES_LEVEL;\r\n    this.languageNames = MockData.LANGUAGES_NAME;\r\n  }\r\n\r\n  public loadFormInstance(language: Language): void {\r\n    this.rForm = new FormGroup({\r\n      level: new FormControl(language.level, [Validators.required]),\r\n      name: new FormControl(language.name, [Validators.required]),\r\n      date: new FormControl(language.date, [\r\n        Validators.required,\r\n        dateValidator()\r\n      ])\r\n    });\r\n  }\r\n  public submit() {\r\n    this.saveOrUpdate({ ...this.language, ...this.rForm.value });\r\n  }\r\n\r\n  compareLevel(option1, option2) {\r\n    return option1.uid === (option2 && option2.uid);\r\n  }\r\n  compareName(option1, option2) {\r\n    return option1.uid === (option2 && option2.uid);\r\n  }\r\n  private _update(language: Language) {\r\n    const languages = this.user.languages.map(_language =>\r\n      _language.uid === language.uid ? language : _language\r\n    );\r\n    const user = {\r\n      ...this.user,\r\n      languages\r\n    };\r\n    this.update.emit(user);\r\n  }\r\n  private _save(language: Language) {\r\n    const _language = MockData.fakeIncreaseID<Language>(\r\n      this.user.languages,\r\n      language\r\n    );\r\n    const languages = [...this.user.languages, _language];\r\n    const user = {\r\n      ...this.user,\r\n      languages\r\n    };\r\n    this.save.emit(user);\r\n  }\r\n\r\n  saveOrUpdate(language: Language) {\r\n    this.isNew() ? this._save(language) : this._update(language);\r\n  }\r\n  public isNew(): boolean {\r\n    return !!!this.language;\r\n  }\r\n}\r\n","module.exports = \"<div *ngIf=\\\"user\\\" class=\\\"div_profile\\\">\\r\\n  <div class=\\\"datos_personales\\\" fxFlex fxLayout=\\\"row\\\">\\r\\n    <mat-card>\\r\\n      <img mat-card-image [src]=\\\"user.avatar_hash\\\">\\r\\n      <mat-card-header style=\\\"justify-content: center\\\">\\r\\n        <mat-card-title>\\r\\n          {{user.name + ' ' + user.surname}}\\r\\n        </mat-card-title>\\r\\n      </mat-card-header>\\r\\n    </mat-card>\\r\\n\\r\\n    <div class=\\\"pl15 datos-personales\\\">\\r\\n      <mat-list>\\r\\n        <mat-list-item> Email: {{user.email}} </mat-list-item>\\r\\n        <mat-list-item> Fecha de nacimiento: {{user.birthdate | date:'dd-MM-yyyy'}}  </mat-list-item>\\r\\n        <mat-list-item> Teléfono: {{user.phone}}  </mat-list-item>\\r\\n        <mat-list-item> NIF/NIE: {{user.documentNumber}}  </mat-list-item>\\r\\n        <mat-list-item> Permisos de conducir: {{user.license}}  </mat-list-item>\\r\\n        <mat-list-item> Dirección:\\r\\n          {{user.address.street + \\\", \\\" + user.address.municipe.name + \\\". \\\" + user.address.province.name}}\\r\\n        </mat-list-item>\\r\\n      </mat-list>\\r\\n      <button mat-raised-button class=\\\"btn-modificar\\\" color=\\\"primary\\\" [routerLink]=\\\"['/admin/profile/profile-student/account']\\\">Modificar</button>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"studies\\\">\\r\\n    <h3>Formación académica</h3>\\r\\n    <table mat-table [dataSource]=\\\"user.studies\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n      <!--- Note that these columns can be defined in any order.\\r\\n            The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n\\r\\n      <!-- Position Column -->\\r\\n      <ng-container matColumnDef=\\\"grade\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Tipo  </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.level.name}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"level\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Nivel  </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.grade?.name }} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"title\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Título  </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.title.name || element.title }} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"institution\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Centro  </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.institution.name  || element.institution}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"certificate\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Certificado  </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.certificate ? 'Si' : 'No'}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"bilingue\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Bilingüe  </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.bilingue ? 'Si' : 'No'}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"dual\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Dual  </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.dual ? 'Si' : 'No'}} </td>\\r\\n      </ng-container>\\r\\nç\\r\\n      <ng-container matColumnDef=\\\"date\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Fecha  </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.date | date:'dd-MM-yyyy'}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"edit\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Editar  </th>\\r\\n        <td mat-cell *matCellDef=\\\"let study\\\">\\r\\n          <a class=\\\"btn-acciones\\\" mat-raised-button [routerLink]=\\\"['/admin/profile/profile-student/study', study.uid]\\\">Editar\\r\\n          </a>\\r\\n\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"delete\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Borrar  </th>\\r\\n      <td mat-cell *matCellDef=\\\"let study\\\">\\r\\n        <a mat-raised-button class=\\\"btn-borrar\\\" color=\\\"warn\\\" (click)=\\\"deleteStudy(study.uid)\\\">Borrar</a>\\r\\n\\r\\n      </td>\\r\\n\\r\\n    </ng-container>\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n\\r\\n    <a class=\\\"btn-nuevo\\\" mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/admin/profile/profile-student/study']\\\">Nueva formación</a>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"languages\\\">\\r\\n    <h3>Idiomas</h3>\\r\\n    <table mat-table [dataSource]=\\\"user.languages\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n      <!--- Note that these columns can be defined in any order.\\r\\n            The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n\\r\\n      <!-- Position Column -->\\r\\n      <ng-container matColumnDef=\\\"level\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Nivel  </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.level.name}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"language\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Idioma  </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name.name}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"date\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Fecha  </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.date | date: 'dd-MM-yyyy'}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"edit\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Editar  </th>\\r\\n        <td mat-cell *matCellDef=\\\"let language\\\">\\r\\n          <a class=\\\"btn-acciones\\\" mat-raised-button [routerLink]=\\\"['/admin/profile/profile-student/language', language.uid]\\\">Editar\\r\\n        </a>\\r\\n\\r\\n        </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"delete\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Borrar  </th>\\r\\n        <td mat-cell *matCellDef=\\\"let language\\\">\\r\\n\\r\\n          <a mat-raised-button class=\\\"btn-borrar\\\" color=\\\"warn\\\" (click)=\\\"deleteLanguage(language.uid)\\\">Borrar</a>\\r\\n\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumnsLanguages\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumnsLanguages;\\\"></tr>\\r\\n    </table>\\r\\n    <a class=\\\"btn-nuevo\\\" mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/admin/profile/profile-student/language']\\\">Nuevo idioma</a>\\r\\n\\r\\n\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  <!--<div class=\\\"float-left\\\" id=\\\"foto-perfil\\\">-->\\r\\n    <!--<div>-->\\r\\n      <!--<img-->\\r\\n        <!--class=\\\"img-fluid img-profile rounded-circle mx-auto mb-2\\\"-->\\r\\n        <!--src=\\\"{{ user.avatar_hash }}\\\"-->\\r\\n      <!--/>-->\\r\\n    <!--</div>-->\\r\\n    <!--<div class=\\\"text-center pr-5\\\">-->\\r\\n      <!--{{ user.name + ' ' + user.surname }}-->\\r\\n    <!--</div>-->\\r\\n  <!--</div>-->\\r\\n\\r\\n  <!--<section id=\\\"datosPersonales\\\" class=\\\"float-left\\\">-->\\r\\n    <!--<table>-->\\r\\n      <!--<tbody>-->\\r\\n        <!--<tr>-->\\r\\n          <!--<th>Email</th>-->\\r\\n          <!--<td>{{ user.email }}</td>-->\\r\\n        <!--</tr>-->\\r\\n        <!--<tr>-->\\r\\n          <!--<th>Fecha de nacimiento</th>-->\\r\\n          <!--<td>{{ user.birthdate }}</td>-->\\r\\n        <!--</tr>-->\\r\\n        <!--<tr>-->\\r\\n          <!--<th>Tel&eacute;fono</th>-->\\r\\n          <!--<td>{{ user.phone }}</td>-->\\r\\n        <!--</tr>-->\\r\\n        <!--<tr>-->\\r\\n          <!--<th>NIF/NIE</th>-->\\r\\n          <!--<td>{{ user.documentNumber }}</td>-->\\r\\n        <!--</tr>-->\\r\\n        <!--<tr>-->\\r\\n          <!--<th>Permisos de conducir</th>-->\\r\\n          <!--<td>{{ user.license }}</td>-->\\r\\n        <!--</tr>-->\\r\\n        <!--<tr>-->\\r\\n          <!--<th>Direccion</th>-->\\r\\n          <!--<td>{{ user.address | json }}</td>-->\\r\\n        <!--</tr>-->\\r\\n      <!--</tbody>-->\\r\\n    <!--</table>-->\\r\\n    <!--<a [routerLink]=\\\"['/admin/profile/profile-student/account']\\\">Modificar</a>-->\\r\\n  <!--</section>-->\\r\\n  <!--<div id=\\\"otra_info\\\" class=\\\"float-left\\\">-->\\r\\n    <!--<form>-->\\r\\n      <!--<div class=\\\"float-left\\\">-->\\r\\n        <!--<label for=\\\"about-me\\\">Acerca de mi...</label><br />-->\\r\\n        <!--<textarea readonly=\\\"true\\\" id=\\\"about-me\\\" name=\\\"about-me\\\">{{-->\\r\\n          <!--user.aboutMe-->\\r\\n        <!--}}</textarea>-->\\r\\n      <!--</div>-->\\r\\n      <!--<div class=\\\"float-left\\\">-->\\r\\n        <!--<label for=\\\"other\\\">Otras competencias</label> <br />-->\\r\\n\\r\\n        <!--<textarea readonly=\\\"true\\\" id=\\\"other\\\" name=\\\"other\\\">{{-->\\r\\n          <!--user.otherCompetences-->\\r\\n        <!--}}</textarea>-->\\r\\n      <!--</div>-->\\r\\n    <!--</form>-->\\r\\n  <!--</div>-->\\r\\n\\r\\n  <!--<section style=\\\"clear:both;padding-bottom:4em;\\\"></section>-->\\r\\n\\r\\n  <!--<h2>Formaci&oacute;n acad&eacute;mica</h2>-->\\r\\n  <!--<section id=\\\"formacion_academica\\\">-->\\r\\n    <!--<table class=\\\"table table-bordered table-striped\\\">-->\\r\\n      <!--<thead class=\\\"thead-light\\\">-->\\r\\n        <!--<th>Tipo</th>-->\\r\\n        <!--<th>Nivel</th>-->\\r\\n        <!--<th>T&iacute;tulo</th>-->\\r\\n        <!--<th>Centro</th>-->\\r\\n        <!--<th>Fecha</th>-->\\r\\n        <!--<th>Certificado</th>-->\\r\\n        <!--<th>Bilingüe</th>-->\\r\\n        <!--<th>Dual</th>-->\\r\\n        <!--<th>Acciones</th>-->\\r\\n      <!--</thead>-->\\r\\n      <!--<tbody>-->\\r\\n        <!--<tr *ngFor=\\\"let study of user.studies; let i = index\\\">-->\\r\\n          <!--<td>{{ study.level.name }}</td>-->\\r\\n          <!--<td>{{ study.grade?.name }}</td>-->\\r\\n\\r\\n          <!--<td>{{ study.title.name || study.title }}</td>-->\\r\\n          <!--<td>{{ study.institution.name || study.institution }}</td>-->\\r\\n          <!--<td>{{ study.date }}</td>-->\\r\\n          <!--<td>{{ study.certificate ? 'Sí' : 'No' }}</td>-->\\r\\n          <!--<td>{{ study.bilingue ? 'Sí' : 'No' }}</td>-->\\r\\n          <!--<td>{{ study.dual ? 'Sí' : 'No' }}</td>-->\\r\\n\\r\\n          <!--<td>-->\\r\\n            <!--<a-->\\r\\n              <!--[routerLink]=\\\"['/admin/profile/profile-student/study', study.uid]\\\"-->\\r\\n              <!--&gt;Editar</a-->\\r\\n            <!--&gt;-->\\r\\n            <!--|-->\\r\\n            <!--<a style=\\\"cursor:pointer\\\" (click)=\\\"deleteStudy(study.uid)\\\"-->\\r\\n              <!--&gt;Borrar</a-->\\r\\n            <!--&gt;-->\\r\\n          <!--</td>-->\\r\\n        <!--</tr>-->\\r\\n      <!--</tbody>-->\\r\\n    <!--</table>-->\\r\\n    <!--<a [routerLink]=\\\"['/admin/profile/profile-student/study']\\\"-->\\r\\n      <!--&gt;Nueva formación</a-->\\r\\n    <!--&gt;-->\\r\\n  <!--</section>-->\\r\\n\\r\\n  <!--<h2>Idiomas</h2>-->\\r\\n  <!--<section id=\\\"languages\\\">-->\\r\\n    <!--<table class=\\\"table table-bordered table-striped\\\">-->\\r\\n      <!--<thead class=\\\"thead-light\\\">-->\\r\\n        <!--<th>Nivel</th>-->\\r\\n        <!--<th>Idioma</th>-->\\r\\n        <!--<th>Fecha</th>-->\\r\\n        <!--<th>Acciones</th>-->\\r\\n      <!--</thead>-->\\r\\n      <!--<tbody>-->\\r\\n        <!--<tr *ngFor=\\\"let language of user.languages\\\">-->\\r\\n          <!--<td>{{ language.level.name }}</td>-->\\r\\n          <!--<td>{{ language.name.name }}</td>-->\\r\\n          <!--<td>{{ language.date }}</td>-->\\r\\n          <!--<td>-->\\r\\n            <!--<a-->\\r\\n              <!--[routerLink]=\\\"[-->\\r\\n                <!--'/admin/profile/profile-student/language',-->\\r\\n                <!--language.uid-->\\r\\n              <!--]\\\"-->\\r\\n              <!--&gt;Editar</a-->\\r\\n            <!--&gt;-->\\r\\n            <!--|-->\\r\\n            <!--<a style=\\\"cursor:pointer\\\" (click)=\\\"deleteLanguage(language.uid)\\\"-->\\r\\n              <!--&gt;Borrar</a-->\\r\\n            <!--&gt;-->\\r\\n          <!--</td>-->\\r\\n        <!--</tr>-->\\r\\n      <!--</tbody>-->\\r\\n    <!--</table>-->\\r\\n    <!--<a [routerLink]=\\\"['/admin/profile/profile-student/language']\\\"-->\\r\\n      <!--&gt;Nuevo idioma</a-->\\r\\n    <!--&gt;-->\\r\\n  <!--</section>-->\\r\\n</div>\\r\\n<div *ngIf=\\\"!user\\\" class=\\\"contenido\\\">\\r\\n  <p>Datos están siendo cargados...</p>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3Byb2ZpbGUvcHJvZmlsZS1zdHVkZW50L3Byb2ZpbGUtc3R1ZGVudC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { User } from 'src/app/shared/models/user.model';\r\nimport {MatTableDataSource} from '@angular/material';\r\nimport {Study} from '../../../shared/models/study.model';\r\nimport {Store} from '@ngrx/store';\r\nimport {AppStore} from '../../../shared/states/store.interface';\r\nimport {getProfile} from '../../../shared/states/user/selectors';\r\n\r\n@Component({\r\n  selector: 'app-profile-student',\r\n  templateUrl: './profile-student.component.html',\r\n  styleUrls: ['./profile-student.component.scss']\r\n})\r\nexport class ProfileStudentComponent {\r\n  @Input() user: User;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onDeleteStudy: EventEmitter<User> = new EventEmitter();\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onDeleteLanguage: EventEmitter<User> = new EventEmitter();\r\n  dataSource: MatTableDataSource<Study>;\r\n  studies: Study[];\r\n  displayedColumns = ['grade', 'level', 'title', 'institution' , 'date', 'certificate', 'bilingue' , 'dual', 'edit', 'delete'];\r\n  displayedColumnsLanguages = ['level', 'language', 'date', 'edit', 'delete' ];\r\n  constructor(private store$: Store<AppStore>) {\r\n\r\n   // this.dataSource =  new MatTableDataSource(this.studies);\r\n   //  const user$ = this.store$.select(getProfile);\r\n   //  user$.subscribe(us => {\r\n   //    this.studies = us.studies;\r\n   //    this.dataSource = new MatTableDataSource(this.studies);\r\n   //    console.log(us);\r\n   //  });\r\n  }\r\n\r\n  deleteStudy(studyID: number) {\r\n    const studies = [...this.user.studies];\r\n    const index = studies.findIndex(study => study.uid === studyID);\r\n    if (index === -1) {\r\n      alert('Error: Study not found');\r\n      return;\r\n    }\r\n    studies.splice(index, 1);\r\n    const user = {\r\n      ...this.user,\r\n      studies\r\n    };\r\n    this.onDeleteStudy.emit(user);\r\n  }\r\n  deleteLanguage(languageID: any) {\r\n    const languages = [...this.user.languages];\r\n    const index = languages.findIndex(language => language.uid === languageID);\r\n    if (index === -1) {\r\n      alert('Error: Language not found');\r\n      return;\r\n    }\r\n    languages.splice(index, 1);\r\n    const user = {\r\n      ...this.user,\r\n      languages\r\n    };\r\n    this.onDeleteLanguage.emit(user);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Study } from 'src/app/shared/models/study.model';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from 'src/app/shared/models/user.model';\r\nimport { AppStore } from 'src/app/shared/states/store.interface';\r\nimport { Store } from '@ngrx/store';\r\nimport { getProfile, getStudyByID } from 'src/app/shared/states/user';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport * as UserActions from 'src/app/shared/states/user/actions';\r\n\r\n@Component({\r\n  selector: 'app-profile-study-wrapper',\r\n  template: `\r\n    <app-profile-study\r\n      [user]=\"user$ | async\"\r\n      [study]=\"study$ | async\"\r\n      (save)=\"onSaveStudy($event)\"\r\n      (update)=\"onUpdateStudy($event)\"\r\n    ></app-profile-study>\r\n  `\r\n})\r\nexport class ProfileStudyWrapperComponent {\r\n  study$: Observable<Study>;\r\n  user$: Observable<User>;\r\n\r\n  constructor(private route: ActivatedRoute, private store$: Store<AppStore>) {\r\n    this.user$ = this.store$.select(getProfile);\r\n    this.study$ = this.route.params.pipe(\r\n      map(({ uid: uid }: { uid: string }) => Number.parseInt(uid)),\r\n      switchMap(uid => this.store$.select(getStudyByID(uid)))\r\n    );\r\n  }\r\n  onSaveStudy(user: User) {\r\n    this.store$.dispatch(new UserActions.UpdateUser(user));\r\n  }\r\n  onUpdateStudy(user: User) {\r\n    this.store$.dispatch(new UserActions.UpdateUser(user));\r\n  }\r\n}\r\n","module.exports = \"<h2 *ngIf=\\\"isNew()\\\">Nueva formación</h2>\\r\\n<h2 *ngIf=\\\"!isNew()\\\">Modificar formación</h2>\\r\\n\\r\\n\\r\\n<form [formGroup]=\\\"rForm\\\" (submit)=\\\"submit()\\\">\\r\\n\\r\\n\\r\\n  <mat-form-field>\\r\\n    <mat-label>Tipo</mat-label>\\r\\n    <mat-select [compareWith]=\\\"compareOption\\\" required formControlName=\\\"option\\\" id=\\\"option\\\" name=\\\"option\\\">\\r\\n      <mat-option selected>---</mat-option>\\r\\n\\r\\n      <mat-option *ngFor=\\\"let option of options\\\" [value]=\\\"option\\\">\\r\\n        {{option.name}}\\r\\n      </mat-option>\\r\\n    </mat-select>\\r\\n    <mat-error *ngIf=\\\"rForm.controls.option.errors\\\">El tipo de título es obligatorio</mat-error>\\r\\n\\r\\n  </mat-form-field>\\r\\n  <!--<select-->\\r\\n    <!--class=\\\"col-sm-10 form-control\\\"-->\\r\\n    <!--[compareWith]=\\\"compareOption\\\"-->\\r\\n    <!--formControlName=\\\"option\\\"-->\\r\\n  <!--&gt;-->\\r\\n    <!--<option selected>-&#45;&#45;</option>-->\\r\\n\\r\\n    <!--<option [ngValue]=\\\"option\\\" *ngFor=\\\"let option of options\\\">{{-->\\r\\n      <!--option.name-->\\r\\n    <!--}}</option>-->\\r\\n  <!--</select>-->\\r\\n\\r\\n  <app-vocational-form\\r\\n    *ngIf=\\\"isSelectVocational()\\\"\\r\\n    [study]=\\\"study\\\"\\r\\n    (onSave)=\\\"saveOrUpdate($event)\\\"\\r\\n    (onExit)=\\\"exit($event)\\\"\\r\\n  ></app-vocational-form>\\r\\n\\r\\n  <app-university-degree-form\\r\\n    *ngIf=\\\"isSelectUniversity()\\\"\\r\\n    [study]=\\\"study\\\"\\r\\n    (onSave)=\\\"saveOrUpdate($event)\\\"\\r\\n    (onExit)=\\\"exit($event)\\\"\\r\\n  ></app-university-degree-form>\\r\\n</form>\\r\\n\"","module.exports = \"form input.ng-invalid.ng-touched {\\n  border-color: #FA787E; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvcHJvZmlsZS9wcm9maWxlLXN0dWRlbnQvc3R1ZHkvQzpcXFVzZXJzXFxTYXJhXFxEb2N1bWVudHNcXE1BU1RFUlxcMiBzZW1lc3RyZVxcRnJvbnQtZW5kIGF2YW56YWRvXFxQRUMzXFxVT0NKb2Ivc3JjXFxhcHBcXHZpZXdzXFxwcm9maWxlXFxwcm9maWxlLXN0dWRlbnRcXHN0dWR5XFxwcm9maWxlLXN0dWR5LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UscUJBQXFCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC92aWV3cy9wcm9maWxlL3Byb2ZpbGUtc3R1ZGVudC9zdHVkeS9wcm9maWxlLXN0dWR5LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZm9ybSBpbnB1dC5uZy1pbnZhbGlkLm5nLXRvdWNoZWQge1xyXG4gIGJvcmRlci1jb2xvcjogI0ZBNzg3RTtcclxufVxyXG4iXX0= */\"","import {\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport {\r\n  Study,\r\n  VocationalStudy,\r\n  CollegeStudy\r\n} from 'src/app/shared/models/study.model';\r\nimport { MockData } from 'src/app/shared/mock-data';\r\nimport { User } from 'src/app/shared/models/user.model';\r\n\r\n@Component({\r\n  selector: 'app-profile-study',\r\n  templateUrl: './profile-study.component.html',\r\n  styleUrls: ['./profile-study.component.scss']\r\n})\r\nexport class ProfileStudyComponent implements OnChanges {\r\n  @Input() study: VocationalStudy | CollegeStudy;\r\n  @Input() user: User;\r\n  @Output() save: EventEmitter<User> = new EventEmitter();\r\n  @Output() update: EventEmitter<User> = new EventEmitter();\r\n  rForm: FormGroup;\r\n  options = MockData.TYPE_STUDIES;\r\n\r\n  constructor() {}\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    let study = {} as Study;\r\n    if (this.hasChangeStudy(changes.study)) {\r\n      study = changes.study.currentValue;\r\n    }\r\n    this.loadFormInstance(study);\r\n  }\r\n  private loadFormInstance(study: Study) {\r\n    this.rForm = new FormGroup({\r\n      option: new FormControl(study.level, [Validators.required])\r\n    });\r\n  }\r\n  private hasChangeStudy(study) {\r\n    return study && study.currentValue;\r\n  }\r\n\r\n  compareOption(option1, option2) {\r\n    return option1.uid === (option2 && option2.uid);\r\n  }\r\n  private _update(study: Study) {\r\n    const studies = this.user.studies.map(_study =>\r\n      _study.uid === study.uid ? study : _study\r\n    ) as (VocationalStudy | CollegeStudy)[];\r\n    const user = {\r\n      ...this.user,\r\n      studies\r\n    };\r\n    this.update.emit(user);\r\n  }\r\n  private _save(study: Study) {\r\n    const _study = MockData.fakeIncreaseID<Study>(this.user.studies, study);\r\n    const studies = [...this.user.studies, _study] as (\r\n      | VocationalStudy\r\n      | CollegeStudy)[];\r\n    const user = {\r\n      ...this.user,\r\n      studies\r\n    };\r\n    this.save.emit(user);\r\n  }\r\n\r\n  saveOrUpdate(_study: VocationalStudy | CollegeStudy) {\r\n    const study = {\r\n      ..._study,\r\n      level: this.rForm.get('option').value\r\n    };\r\n    this.isNew() ? this._save(study) : this._update(study);\r\n  }\r\n  public isNew(): boolean {\r\n    return !!!this.study;\r\n  }\r\n  public isSelectVocational(): boolean {\r\n    const value = this.rForm.get('option').value;\r\n    return value && value.uid === MockData.TYPE_STUDIES[0].uid;\r\n  }\r\n  public isSelectUniversity(): boolean {\r\n    const value = this.rForm.get('option').value;\r\n    return value && value.uid === MockData.TYPE_STUDIES[1].uid;\r\n  }\r\n}\r\n","module.exports = \"<form fxFlex fxLayout=\\\"column\\\" [formGroup]=\\\"rForm\\\" (submit)=\\\"submit()\\\">\\n\\n\\n\\n\\n  <mat-form-field class=\\\"input\\\">\\n    <input matInput placeholder=\\\"Centro educativo\\\" id=\\\"institution\\\"\\n           formControlName=\\\"institution\\\"\\n           class=\\\"form-control\\\" required\\n           [ngClass]=\\\"{\\n              'is-invalid': submitted && rForm.controls.name.errors\\n            }\\\">\\n    <mat-error *ngIf=\\\"rForm.controls.institution.errors\\\">El centro educativo es obligatorio</mat-error>\\n\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"input\\\">\\n  <input matInput placeholder=\\\"Título\\\" id=\\\"title\\\"\\n           formControlName=\\\"title\\\"\\n           class=\\\"form-control\\\" required\\n           [ngClass]=\\\"{\\n              'is-invalid': submitted && rForm.controls.title.errors\\n            }\\\">\\n    <mat-error *ngIf=\\\"rForm.controls.title.errors\\\">El título es obligatorio</mat-error>\\n\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input required matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Fecha de obtención del título\\\" formControlName=\\\"date\\\">\\n    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n    <mat-datepicker #picker></mat-datepicker>\\n    <mat-error *ngIf=\\\"rForm.controls.date.errors\\\">Debes indicar una fecha válida</mat-error>\\n  </mat-form-field>\\n\\n\\n\\n  <mat-checkbox formControlName=\\\"bilingue\\\" id=\\\"bilingue\\\">Bilingüe</mat-checkbox>\\n\\n\\n\\n  <div fxFlex fxLayout=\\\"row\\\" fxFlexAlign=\\\"center\\\">\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"rForm.invalid\\\">\\n      Guardar\\n    </button>\\n  </div>\\n\\n</form>\\n\"","import {\n  Component,\n  Output,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges\n} from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CollegeStudy } from 'src/app/shared/models/study.model';\nimport { dateValidator } from 'src/app/shared/directives/date-validator.directive';\n\n@Component({\n  selector: 'app-university-degree-form',\n  templateUrl: './university-degree-form.component.html'\n})\nexport class UniversityDegreeComponent implements OnInit, OnChanges {\n  @Output() onSave: EventEmitter<CollegeStudy> = new EventEmitter();\n  @Input() study: CollegeStudy = {} as CollegeStudy;\n  public rForm: FormGroup;\n\n  constructor() {}\n  ngOnInit() {\n    this.loadSelectProperties();\n  }\n  ngOnChanges(changes: SimpleChanges) {\n    let study = {} as CollegeStudy;\n    if (this.hasChangeStudy(changes.study)) {\n      study = changes.study.currentValue;\n    }\n    this.loadFormInstance(study);\n  }\n  private hasChangeStudy(study) {\n    return study && study.currentValue;\n  }\n\n  public loadSelectProperties(): void {}\n\n  public loadFormInstance(study: CollegeStudy): void {\n    this.rForm = new FormGroup({\n      institution: new FormControl(study.institution, [Validators.required]),\n      title: new FormControl(study.title, [Validators.required]),\n      date: new FormControl(study.date, [Validators.required, dateValidator()]),\n      bilingue: new FormControl(study.bilingue, [])\n    });\n  }\n\n  public submit() {\n    this.onSave.emit({ ...this.study, ...this.rForm.value });\n  }\n\n  public save() {\n    const study: CollegeStudy = {\n      certificate: false,\n      ...this.rForm.value\n    };\n    this.onSave.emit(study);\n  }\n}\n","module.exports = \"<form fxFlex fxLayout=\\\"column\\\" [formGroup]=\\\"rForm\\\" (submit)=\\\"submit()\\\">\\n\\n\\n<mat-form-field>\\n    <mat-label>Centro educativo</mat-label>\\n    <mat-select [compareWith]=\\\"compareInstitution\\\" required formControlName=\\\"institution\\\" id=\\\"institution\\\" name=\\\"institution\\\">\\n      <mat-option *ngFor=\\\"let institution of institutions\\\" [value]=\\\"institution\\\">\\n        {{institution.name}}\\n      </mat-option>\\n    </mat-select>\\n    <mat-error *ngIf=\\\"rForm.controls.institution.errors\\\">El centro educativo es obligatorio</mat-error>\\n\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <mat-label>Familia profesional</mat-label>\\n    <mat-select [compareWith]=\\\"compareCategory\\\" required formControlName=\\\"category\\\" id=\\\"category\\\" name=\\\"category\\\">\\n      <mat-option *ngFor=\\\"let category of categories\\\" [value]=\\\"category\\\">\\n        {{category.name}}\\n      </mat-option>\\n    </mat-select>\\n    <mat-error *ngIf=\\\"rForm.controls.category.errors\\\">La familia profesional es obligatoria</mat-error>\\n\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <mat-label>Nivel</mat-label>\\n    <mat-select [compareWith]=\\\"compareGrade\\\" required formControlName=\\\"grade\\\" id=\\\"grade\\\" name=\\\"grade\\\">\\n      <mat-option *ngFor=\\\"let grade of grades\\\" [value]=\\\"grade\\\">\\n        {{grade.name}}\\n      </mat-option>\\n    </mat-select>\\n    <mat-error *ngIf=\\\"rForm.controls.grade.errors\\\">El nivel es obligatorio</mat-error>\\n\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <mat-label>Título</mat-label>\\n    <mat-select [compareWith]=\\\"compareTitle\\\" required formControlName=\\\"title\\\" id=\\\"title\\\" name=\\\"title\\\">\\n      <mat-option *ngFor=\\\"let title of titles\\\" [value]=\\\"title\\\">\\n        {{title.name}}\\n      </mat-option>\\n    </mat-select>\\n    <mat-error *ngIf=\\\"rForm.controls.title.errors\\\">El título es obligatorio</mat-error>\\n\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input required matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Fecha de obtención del título\\\" formControlName=\\\"date\\\">\\n    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n    <mat-datepicker #picker></mat-datepicker>\\n    <mat-error *ngIf=\\\"rForm.controls.date.errors\\\">Debes indicar una fecha válida</mat-error>\\n  </mat-form-field>\\n\\n\\n\\n  <mat-checkbox formControlName=\\\"bilingue\\\" id=\\\"bilingue\\\">Bilingüe</mat-checkbox>\\n  <mat-checkbox formControlName=\\\"dual\\\" id=\\\"dual\\\">Dual</mat-checkbox>\\n  <div fxFlex fxLayout=\\\"row\\\" fxFlexAlign=\\\"center\\\">\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"rForm.invalid\\\">\\n      Guardar\\n    </button>\\n  </div>\\n\\n</form>\\n\"","import {\n  Component,\n  Output,\n  EventEmitter,\n  Input,\n  OnInit,\n  SimpleChanges,\n  OnChanges\n} from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {\n  VocationalStudy,\n  Institution,\n  Category,\n  TitleStudy,\n  Grade,\n  CollegeStudy\n} from 'src/app/shared/models/study.model';\nimport { MockData } from 'src/app/shared/mock-data';\nimport { dateValidator } from 'src/app/shared/directives/date-validator.directive';\n\n@Component({\n  selector: 'app-vocational-form',\n  templateUrl: './vocational-form.component.html'\n})\nexport class VocationalFormComponent implements OnInit, OnChanges {\n  @Output() onSave: EventEmitter<VocationalStudy> = new EventEmitter();\n  @Input() study: VocationalStudy = {} as VocationalStudy;\n  public institutions: Institution[];\n  public categories: Category[];\n  public titles: TitleStudy[];\n  public grades: Grade[];\n  public rForm: FormGroup;\n\n  constructor() {}\n  ngOnInit() {\n    this.loadSelectProperties();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    let study = {} as VocationalStudy;\n    if (this.hasChangeStudy(changes.study)) {\n      study = changes.study.currentValue;\n    }\n    this.loadFormInstance(study);\n  }\n  private hasChangeStudy(study) {\n    return study && study.currentValue;\n  }\n\n  public loadSelectProperties(): void {\n    this.institutions = MockData.VOCATIONAL_INSTITUTION;\n    this.categories = MockData.VOCATIONAL_CATEGORY;\n    this.titles = MockData.VOCATIONAL_TITLE;\n    this.grades = MockData.VOCATIONAL_GRADES;\n  }\n\n  public loadFormInstance(study: VocationalStudy): void {\n    this.rForm = new FormGroup({\n      institution: new FormControl(study.institution, [Validators.required]),\n      category: new FormControl(study.category, [Validators.required]),\n      grade: new FormControl(study.grade, [Validators.required]),\n      title: new FormControl(study.title, [Validators.required]),\n      date: new FormControl(study.date, [Validators.required, dateValidator()]),\n      dual: new FormControl(study.dual, []),\n      bilingue: new FormControl(study.bilingue, [])\n    });\n  }\n\n  public submit() {\n    this.onSave.emit({ ...this.study, ...this.rForm.value });\n  }\n\n  public compareInstitution(\n    institution1: Institution,\n    institution2?: Institution\n  ) {\n    return institution1.uid === (institution2 && institution2.uid);\n  }\n  public compareCategory(category1: Category, category2: Category) {\n    return category1.uid === (category2 && category2.uid);\n  }\n  public compareTitle(title1: TitleStudy, title2: TitleStudy) {\n    return title1.uid === (title2 && title2.uid);\n  }\n\n  public compareGrade(grade1: Grade, grade2: Grade) {\n    return grade1.uid === (grade2 && grade2.uid);\n  }\n  public save() {\n    const study: VocationalStudy = {\n      certificate: false,\n      ...this.rForm.value\n    };\n    this.onSave.emit(study);\n  }\n}\n","module.exports = \"<h2>\\n  Perfil\\n</h2>\\n<!-- <div *ngIf=\\\"userRol === 'student'\\\"> -->\\n<app-profile-student\\n  [user]=\\\"user$ | async\\\"\\n  (onDeleteStudy)=\\\"updateUser($event)\\\"\\n  (onDeleteLanguage)=\\\"updateUser($event)\\\"\\n>\\n</app-profile-student>\\n<!-- </div> -->\\n\\n<!-- <div *ngIf=\\\"userRol === 'company'\\\">\\n\\t<app-profile-company> </app-profile-company>\\n\\t\\n</div> -->\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3Byb2ZpbGUvcHJvZmlsZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { AppStore } from 'src/app/shared/states/store.interface';\nimport { Store } from '@ngrx/store';\nimport { getProfile } from 'src/app/shared/states/user';\nimport { Observable } from 'rxjs';\nimport { User } from 'src/app/shared/models/user.model';\nimport * as UserActions from 'src/app/shared/states/user/actions';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProfileComponent {\n  user$: Observable<User>;\n\n  constructor(private store$: Store<AppStore>) {\n    this.user$ = this.store$.select(getProfile);\n  }\n  updateUser(user: User) {\n    this.store$.dispatch(new UserActions.UpdateUser(user));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ProfileRoutingModule } from './profile-routing.module';\nimport { ProfileComponent } from './profile.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { ProfileStudentComponent } from './profile-student/profile-student.component';\nimport { ProfileStudyComponent } from './profile-student/study/profile-study.component';\nimport { VocationalFormComponent } from './profile-student/study/vocational-form/vocational-form.component';\nimport { UniversityDegreeComponent } from './profile-student/study/university-degree-form/university-degree-form.component';\nimport { ProfileLanguageComponent } from './profile-student/language/profile-language.component';\nimport { ProfileAccountComponent } from './profile-student/account/profile-account.component';\nimport { ProfileAccountWrapperComponent } from './profile-student/account/profile-account.component-wrapper';\nimport { ProfileLanguageWrapperComponent } from './profile-student/language/profile-language.component-wrapper';\nimport { ProfileStudyWrapperComponent } from './profile-student/study/profile-study.component-wrapper';\n\n@NgModule({\n  declarations: [\n    ProfileComponent,\n    ProfileStudentComponent,\n    ProfileStudyComponent,\n    ProfileStudyWrapperComponent,\n    VocationalFormComponent,\n    UniversityDegreeComponent,\n    ProfileLanguageComponent,\n    ProfileLanguageWrapperComponent,\n    ProfileAccountComponent,\n    ProfileAccountWrapperComponent\n  ],\n  imports: [SharedModule, ProfileRoutingModule]\n})\nexport class ProfileModule {}\n"],"sourceRoot":""}